PROBLEM: Implement inheritence on Employement Management System
CODE:
    #include <iostream>
#include <vector>

using namespace std;

// Base class for Employee
class Employee {
protected:
    string name;
    int id;
    double salary;

public:
    Employee(string name, int id) : name(name), id(id), salary(0) {}
    virtual void calculateSalary() = 0;
    virtual void displayDetails() {
        cout << "ID: " << id << ", Name: " << name << ", Salary: $" << salary << endl;
    }
    virtual ~Employee() = default;
};

// FullTimeEmployee class
class FullTimeEmployee : public Employee {
public:
    FullTimeEmployee(string name, int id) : Employee(name, id) {}
    void calculateSalary() override { salary = 5000; }
};

// PartTimeEmployee class
class PartTimeEmployee : public Employee {
    double hourlyRate;
    int hoursWorked;

public:
    PartTimeEmployee(string name, int id, double rate, int hours)
        : Employee(name, id), hourlyRate(rate), hoursWorked(hours) {}
    void calculateSalary() override { salary = hourlyRate * hoursWorked; }
};

// ContractEmployee class
class ContractEmployee : public Employee {
public:
    ContractEmployee(string name, int id, double amount)
        : Employee(name, id) { salary = amount; }
    void calculateSalary() override {}
};

int main() {
    vector<Employee*> employees;
    employees.push_back(new FullTimeEmployee("John", 1));
    employees.push_back(new PartTimeEmployee("Alice", 2, 20, 80));
    employees.push_back(new ContractEmployee("Bob", 3, 7000));

    for (auto& emp : employees) {
        emp->calculateSalary();
        emp->displayDetails();
        delete emp;
    }

    return 0;
}
